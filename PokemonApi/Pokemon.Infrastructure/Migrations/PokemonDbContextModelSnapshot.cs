// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokemon.Infrastructure.Data;

#nullable disable

namespace Pokemon.Infrastructure.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    partial class PokemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.AbilityInfoDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NamedApiResourceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NamedApiResourceId");

                    b.HasIndex("PokemonId");

                    b.ToTable("AbilityInfo", (string)null);
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.NamedApiResourceDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("NamedApiResource", (string)null);
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.PokemonDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PokemonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SpriteId")
                        .HasColumnType("int");

                    b.Property<int?>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpriteId");

                    b.ToTable("Pokemon", (string)null);
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.SpriteDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackDefault")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BackFemale")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BackShiny")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BackShinyFemale")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FrontDefault")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FrontFemale")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FrontShiny")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FrontShinyFemale")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Sprite", (string)null);
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.TypeInfoDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NamedApiResourceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Slot")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NamedApiResourceId");

                    b.HasIndex("PokemonId");

                    b.ToTable("TypeInfo", (string)null);
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.UserDbEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.AbilityInfoDbEntity", b =>
                {
                    b.HasOne("Pokemon.Core.Entities.PokemonDb.NamedApiResourceDbEntity", "NamedApiResource")
                        .WithMany()
                        .HasForeignKey("NamedApiResourceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pokemon.Core.Entities.PokemonDb.PokemonDbEntity", "Pokemon")
                        .WithMany("Abilities")
                        .HasForeignKey("PokemonId");

                    b.Navigation("NamedApiResource");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.PokemonDbEntity", b =>
                {
                    b.HasOne("Pokemon.Core.Entities.PokemonDb.SpriteDbEntity", "Sprites")
                        .WithMany()
                        .HasForeignKey("SpriteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Sprites");
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.TypeInfoDbEntity", b =>
                {
                    b.HasOne("Pokemon.Core.Entities.PokemonDb.NamedApiResourceDbEntity", "NamedApiResource")
                        .WithMany()
                        .HasForeignKey("NamedApiResourceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Pokemon.Core.Entities.PokemonDb.PokemonDbEntity", "Pokemon")
                        .WithMany("Types")
                        .HasForeignKey("PokemonId");

                    b.Navigation("NamedApiResource");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Pokemon.Core.Entities.PokemonDb.PokemonDbEntity", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Types");
                });
#pragma warning restore 612, 618
        }
    }
}
